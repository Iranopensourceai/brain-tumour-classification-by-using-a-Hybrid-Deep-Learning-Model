# -*- coding: utf-8 -*-
"""load_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hYtCnWRsbhEO94TAPJ6_yahDlY6e5tjX
"""

from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
import os
from tensorflow.keras.preprocessing.image import ImageDataGenerator

class_label= ["no_tumor", "pituitary_tumor", "meningioma_tumor", "glioma_tumor"]
BATCH_SIZE=32
path ='/kaggle/input/brain-tumor-classification-mri/'
def generate_datafram(path):
    train_labels = []
    train_images = []
    for sub_dir,dir,files in os.walk(path):
        for file in files:
            img_path = os.path.join(sub_dir,file)
            if img_path.split('/')[-3] == 'Training':
                train_images.append(img_path)
                train_labels.append(img_path.split('/')[-2])
            elif img_path.split('/')[-3] == 'Testing':
                train_images.append(img_path)
                train_labels.append(img_path.split('/')[-2])
    df = pd.DataFrame(list(zip(train_images,train_labels)),columns = ['images','labels'])
    #test_df = pd.DataFrame(list(zip(test_images,test_labels)),columns = ['images','labels'])
    return df

data_df = generate_datafram()
from sklearn.model_selection import train_test_split
train_df,test_df = train_test_split(data_df,test_size=0.2)

def Read_flow_from_dataframe(train_df,test_df):
    train_datagen= ImageDataGenerator()
    train_set= train_datagen.flow_from_dataframe(train_df,
                                               x_col='path',
                                               y_col='label',
                                               target_size=(224, 224),
                                               classes=class_label,
                                               shuffle=True,
                                               batch_size=BATCH_SIZE,
                                               class_mode='categorical')

    # test_datagen= ImageDataGenerator(rescale = 1./255)
    test_datagen= ImageDataGenerator()

    test_set= test_datagen.flow_from_dataframe(test_df,
                                               x_col='path',
                                               y_col='label',
                                               target_size=(224, 224),
                                               classes=class_label,
                                               shuffle=True,
                                               batch_size=BATCH_SIZE,
                                               class_mode='categorical')
    return train_set,test_set

train_set,test_set = Read_flow_from_dataframe(path)